@import url('https://unpkg.normalize.css') layer(normalize);

@import "./_toc";

@layer normalize, base, demo;

@layer demo {
  .sticker {
    width: clamp(200px, 35vmin, 400px);
    overflow: visible;
    filter: url('#sticker');
  }

  svg {
    overflow: visible !important;
  }

  [data-pointer-lighting='true'] {
    cursor: none;
  }

  feSpecularLighting {
    opacity: 0.4;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  :where(.fluid) {
    --fluid-min: calc(var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0)));
    --fluid-max: calc(var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0)));
    --fluid-preferred: calc((var(--fluid-max) - var(--fluid-min)) / (var(--font-width-max) - var(--font-width-min)));
    --fluid-type: clamp((var(--fluid-min) / 16) * 1rem,
        ((var(--fluid-min) / 16) * 1rem) - (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) + (var(--fluid-preferred) * var(--variable-unit, 100vi)),
        (var(--fluid-max) / 16) * 1rem);
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  header {
    background: light-dark(#fff, #000);
    height: 10vh;
    font-weight: 800;
  }

  header::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 70%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(90deg,
        var(--line) 1px,
        transparent 1px var(--size)) 50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: canvasText;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}

div.tp-dfwv {
  width: 280px;
  max-height: 100vh;
  overflow: auto;
}

.featured-image {
  margin: .5rem 0 1rem 0;
  position: relative;
  overflow: hidden;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 100%;

  img {
    display: block;
    width: 100%;
    max-width: 100%;
    height: auto;
    margin: 0 auto;
    overflow: hidden;
    object-fit: cover;
  }

}

.weibo {
  width: 100%;
  height: 100%;
  background-color: #e95511;
}

.qq {
  width: 100%;
  height: 100%;
  background-color: #5075db;
}

.hightlight {
  background-color: #f8f9fa;
  padding: 0rem;
  border-radius: 5px;
  margin: 1rem 0;
}

